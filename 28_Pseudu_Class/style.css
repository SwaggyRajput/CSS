/* ---------PSEUDO-CLASS-----------------
A pseudo-class is used to define a special state of an element.
For example, it can be used to:
Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus

selector : pseudo_class{
    property:value;
} 

*/

.css-pseudo-class{
    
}
.pseudo-anchor{
    font-size: 24px;
   color: brown;
   text-decoration: none;
}

/* unvisited link */
.pseudo-anchor:link {
    color: #FF0000;
  }
  
  /* visited link */
.pseudo-anchor:visited {
    color: #00FF00;
  }
  
  /* mouse over link */
.pseudo-anchor:hover {
    color: #FF00FF;
  }
  
  /* selected link */
.pseudo-anchor:active {
    color: #0000FF;
  }

/* Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective!
a:active MUST come after a:hover in the CSS definition in order to be effective!
Pseudo-class names are not case-sensitive. */

/* ---------First-CHild CLass--------
The :first-child pseudo-class matches a specified element that is the first child of another element.

selector:first-child{
    property:value;
} 
*/

/* 
Match the first <p> element
In the following example, the selector matches any <p> element that is the first child of any element: */
.first-child-class :first-child{
    color: red;
}
/* Match the first <i> element in all <p> elements
In the following example, the selector matches the first <i> element in all <p> elements: */
p i :first-child{
  color: green;
}
/* 
Match all <i> elements in all first child <p> elements
In the f
Following example, the selector matches all <i> elements in <p> elements that are the first child of another element: */
p :first-child i {
    color: yellow;
}

/* ----------PSEUDO CLASSES--------

Selector	            Example	                        Example description
:active	              a:active	                        Selects the active link
:checked	            input:checked	                    Selects every checked <input> element
:disabled	            input:disabled	                  Selects every disabled <input> element
:empty	              p:empty	                          Selects every <p> element that has no children
:enabled	            input:enabled	                    Selects every enabled <input> element
:first-child	        p:first-child	                    Selects every <p> elements that is the first child of its parent
:first-of-type	      p:first-of-type	                  Selects every <p> element that is the first <p> element of its parent
:focus		            input:focus                       Selects the <input> element that has focus
:hover	              a:hover	                          Selects links on mouse over
:in-range         	  input:in-range	                  Selects <input> elements with a value within a specified range
:invalid	            input:invalid	                    Selects all <input> elements with an invalid value
:lang(language)	      p:lang(it)	                      Selects every <p> element with a lang attribute value starting with "it"
:last-child	          p:last-child	                    Selects every <p> elements that is the last child of its parent
:last-of-type	        p:last-of-type	                  Selects every <p> element that is the last <p> element of its parent
:link	                a:link	                          Selects all unvisited links
:not(selector)	      :not(p)	                          Selects every element that is not a <p> element
:nth-child(n)	        p:nth-child(2)	                  Selects every <p> element that is the second child of its parent
:nth-last-child(n)	  p:nth-last-child(2)	              Selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n)  p:nth-last-of-type(2)	            Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	      p:nth-of-type(2)	                Selects every <p> element that is the second <p> element of its parent
:only-of-type	        p:only-of-type	                  Selects every <p> element that is the only <p> element of its parent
:only-child	          p:only-child	                    Selects every <p> element that is the only child of its parent
:optional	            input:optional	                  Selects <input> elements with no "required" attribute
:out-of-range	        input:out-of-range	              Selects <input> elements with a value outside a specified range
:read-only	          input:read-only	                  Selects <input> elements with a "readonly" attribute specified
:read-write	          input:read-write	                Selects <input> elements with no "readonly" attribute
:required	            input:required	                  Selects <input> elements with a "required" attribute specified
:root	                root	                            Selects the document's root element
:target	              #news:target	                    Selects the current active #news element (clicked on a URL containing that anchor name)
:valid	              input:valid	                      Selects all <input> elements with a valid value
:visited	            a:visited	                        Selects all visited links 

*/

