.css-animation{
    background-color: red;
    color: green;
    width: 100px;
    height: 100px;
/* ------------ANIMATION-------------
CSS allows animation of HTML elements without using JavaScript! 
@keyframes
animation-name
animation-duration
animation-delay
animation-iteration-count
animation-direction
animation-timing-function
animation-fill-mode
animation

animation: name duration timing-function delay iteration-count direction;
*/

/* ---------ANIMATION-DELAY------------
The animation-delay property specifies a delay for the start of an animation. 
*/
animation-delay: 2s;

/* ---------ANIMATION-DURATION------------
The animation-duration property specifies the duration of an animation. 
*/
animation-duration: 4s;

/* ---------ANIMATION-NAME------------
The animation-name property specifies the name of the animation. 
*/
animation-name: buttonAnimation;

/* ---------ANIMATION-TIMING-FUNCTION------------
The animation-timing-function property specifies the speed curve of an animation. 
The animation-timing-function property can have the following values-->

1.ease - Specifies an animation with a slow start, then fast, then end slowly (this is default)
2.linear - Specifies an animation with the same speed from start to end
3.ease-in - Specifies an animation with a slow start
4.ease-out - Specifies an animation with a slow end
5.ease-in-out - Specifies an animation with a slow start and end
6.cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function
*/
animation-timing-function: ease-in-out;

/* ---------ANIMATION-ITERATION-COUNT------------
The animation-fill-mode property specifies how the animation should apply styles to its target before and after it has been running. 
*/
animation-iteration-count: infinite;

/* ---------ANIMATION-DIRECTION------------
The animation-direction property specifies whether an animation should be played forwards, backwards or in alternate cycles.
The animation-direction property can have the following values-->

1.normal - The animation is played as normal (forwards). This is default
2.reverse - The animation is played in reverse direction (backwards)
3.alternate - The animation is played forwards first, then backwards
4.alternate-reverse - The animation is played backwards first, then forwards
*/
animation-direction: normal;

/* ---------ANIMATION-FILL-MODE------------
The animation-fill-mode property specifies how the animation should apply styles to its target before and after it has been running. 
The animation-fill-mode property specifies a style for the target element when the animation is not playing (before it starts, after it ends, or both).
The animation-fill-mode property can have the following values-->

1.none - Default value. Animation will not apply any styles to the element before or after it is executing
2.forwards - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)
3.backwards - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period
4.both - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions
*/
animation-fill-mode: forwards;

}

@keyframes buttonAnimation {
  0% {
    transform: translateX(0px);
    background-color: red;
  }
  50% {
    transform: translateX(200px);
    background-color: blue;
  }
  100% {
    transform: translateX(0px);
    background-color: red;
  }
}





